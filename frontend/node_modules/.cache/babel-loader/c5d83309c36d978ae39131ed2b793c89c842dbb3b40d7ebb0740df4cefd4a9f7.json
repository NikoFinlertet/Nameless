{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Code\\\\Nameless\\\\frontend\\\\src\\\\ContentCard\\\\ContentCard.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './ContentCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  link,\n  children\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n    if (!isOpen) {\n      window.location.href = link; // Перенаправляем на новую страницу\n    }\n  };\n};\n_s(Card, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Card;\nconst ContentCard = ({\n  content\n}) => {\n  const {\n    type,\n    title,\n    description,\n    mediaUrl\n  } = content;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this), type === \"video\" && /*#__PURE__*/_jsxDEV(\"video\", {\n      controls: true,\n      src: mediaUrl,\n      className: \"content-video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), type === \"image\" && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: mediaUrl,\n      alt: title,\n      className: \"content-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), type === \"text\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 31\n    }, this), type === \"article\" && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: mediaUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"Click on me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ContentCard;\nexport default ContentCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"ContentCard\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Card","link","children","_s","isOpen","setIsOpen","handleClick","window","location","href","_c","ContentCard","content","type","title","description","mediaUrl","className","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","alt","target","rel","_c2","$RefreshReg$"],"sources":["Z:/Code/Nameless/frontend/src/ContentCard/ContentCard.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './ContentCard.css';\r\n\r\n\r\n\r\nconst Card = ({ link, children }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleClick = () => {\r\n      setIsOpen(!isOpen);\r\n      if (!isOpen) {\r\n          window.location.href = link; // Перенаправляем на новую страницу\r\n      }\r\n  };\r\n};\r\n\r\n\r\n\r\nconst ContentCard = ({content}) => {\r\n    const {type, title, description, mediaUrl } = content;\r\n\r\n    return (\r\n        <div className=\"card\">\r\n          <h3>{title}</h3>\r\n          <p>{description}</p>\r\n    \r\n          {type === \"video\" && (\r\n            <video controls src={mediaUrl} className=\"content-video\" />\r\n          )}\r\n    \r\n          {type === \"image\" && (\r\n            <img src={mediaUrl} alt={title} className=\"content-image\" />\r\n          )} \r\n    \r\n          {type === \"text\" && <p>{description}</p>}\r\n    \r\n          {type === \"article\" && (\r\n            <a href={mediaUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Click on me!\r\n            </a>\r\n          )}\r\n        </div>\r\n      );\r\n};\r\n\r\nexport default ContentCard;\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI3B,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACtBD,SAAS,CAAC,CAACD,MAAM,CAAC;IAClB,IAAI,CAACA,MAAM,EAAE;MACTG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGR,IAAI,CAAC,CAAC;IACjC;EACJ,CAAC;AACH,CAAC;AAACE,EAAA,CATIH,IAAI;AAAAU,EAAA,GAAJV,IAAI;AAaV,MAAMW,WAAW,GAAGA,CAAC;EAACC;AAAO,CAAC,KAAK;EAC/B,MAAM;IAACC,IAAI;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAGJ,OAAO;EAErD,oBACIb,OAAA;IAAKkB,SAAS,EAAC,MAAM;IAAAf,QAAA,gBACnBH,OAAA;MAAAG,QAAA,EAAKY;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBtB,OAAA;MAAAG,QAAA,EAAIa;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEnBR,IAAI,KAAK,OAAO,iBACfd,OAAA;MAAOuB,QAAQ;MAACC,GAAG,EAAEP,QAAS;MAACC,SAAS,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC3D,EAEAR,IAAI,KAAK,OAAO,iBACfd,OAAA;MAAKwB,GAAG,EAAEP,QAAS;MAACQ,GAAG,EAAEV,KAAM;MAACG,SAAS,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC5D,EAEAR,IAAI,KAAK,MAAM,iBAAId,OAAA;MAAAG,QAAA,EAAIa;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEvCR,IAAI,KAAK,SAAS,iBACjBd,OAAA;MAAGU,IAAI,EAAEO,QAAS;MAACS,MAAM,EAAC,QAAQ;MAACC,GAAG,EAAC,qBAAqB;MAAAxB,QAAA,EAAC;IAE7D;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEd,CAAC;AAACM,GAAA,GAzBIhB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}