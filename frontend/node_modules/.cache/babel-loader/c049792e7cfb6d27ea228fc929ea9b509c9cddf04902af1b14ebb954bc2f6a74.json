{"ast":null,"code":"var _jsxFileName = \"/Users/arcan/Documents/VUZ/Afanasyev/Nameless/frontend/src/ContentCard/ContentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ContentCard from \"./ContentCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentList = () => {\n  _s();\n  // Моковые данные для тестирования\n  const mockContent = [{\n    type: \"video\",\n    title: \"Video post\",\n    description: \"Aboba.\",\n    postPattern: \"url post on pattern\"\n  }, {\n    type: \"image\",\n    title: \"IMG post\",\n    description: \"Logo\",\n    imgPreview: \"https://pic.rutubelist.ru/user/57/7f/577f254eca6461029dc36412890cf7a8.jpg\"\n  }, {\n    type: \"text\",\n    title: \"Text post\",\n    description: \"Text\",\n    mediaUrl: null\n  }, {\n    type: \"article\",\n    title: \"React Documentation\",\n    description: \"Read the official React documentation.\",\n    postPattern: \"https://reactjs.org/docs/getting-started.html\"\n  }];\n\n  // Состояние для тестирования (используем локально вместо загрузки с API)\n  const [contentList] = useState(mockContent);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-list\",\n    children: contentList.map((content, index) => /*#__PURE__*/_jsxDEV(ContentCard, {\n      content: content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentList, \"gad5AdY3Anb7fKG2zsAxh203L7s=\");\n_c = ContentList;\nexport default ContentList;\nvar _c;\n$RefreshReg$(_c, \"ContentList\");","map":{"version":3,"names":["React","useState","ContentCard","jsxDEV","_jsxDEV","ContentList","_s","mockContent","type","title","description","postPattern","imgPreview","mediaUrl","contentList","className","children","map","content","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arcan/Documents/VUZ/Afanasyev/Nameless/frontend/src/ContentCard/ContentList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ContentCard from \"./ContentCard\";\n\nconst ContentList = () => {\n  // Моковые данные для тестирования\n  const mockContent = [\n    {\n      type: \"video\",\n      title: \"Video post\",\n      description: \"Aboba.\",\n      postPattern: \"url post on pattern\"\n    },\n    {\n      type: \"image\",\n      title: \"IMG post\",\n      description: \"Logo\",\n      imgPreview: \"https://pic.rutubelist.ru/user/57/7f/577f254eca6461029dc36412890cf7a8.jpg\"\n    },\n    {\n      type: \"text\",\n      title: \"Text post\",\n      description: \"Text\",\n      mediaUrl: null\n    },\n    {\n      type: \"article\",\n      title: \"React Documentation\",\n      description: \"Read the official React documentation.\",\n      postPattern: \"https://reactjs.org/docs/getting-started.html\"\n    }\n  ];\n\n  // Состояние для тестирования (используем локально вместо загрузки с API)\n  const [contentList] = useState(mockContent);\n\n  return (\n    <div className=\"content-list\">\n      {contentList.map((content, index) => (\n        <ContentCard key={index} content={content} />\n      ))}\n    </div>\n  );\n};\n\nexport default ContentList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAMC,WAAW,GAAG,CAClB;IACEC,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE,QAAQ;IACrBC,WAAW,EAAE;EACf,CAAC,EACD;IACEH,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE,UAAU;IACjBC,WAAW,EAAE,MAAM;IACnBE,UAAU,EAAE;EACd,CAAC,EACD;IACEJ,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,WAAW;IAClBC,WAAW,EAAE,MAAM;IACnBG,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,qBAAqB;IAC5BC,WAAW,EAAE,wCAAwC;IACrDC,WAAW,EAAE;EACf,CAAC,CACF;;EAED;EACA,MAAM,CAACG,WAAW,CAAC,GAAGb,QAAQ,CAACM,WAAW,CAAC;EAE3C,oBACEH,OAAA;IAAKW,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BF,WAAW,CAACG,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC9Bf,OAAA,CAACF,WAAW;MAAagB,OAAO,EAAEA;IAAQ,GAAxBC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAC7C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvCID,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}