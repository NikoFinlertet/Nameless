{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Code\\\\Nameless\\\\frontend\\\\src\\\\ContentCard\\\\ContentCard.js\";\nimport { useState } from 'react';\nimport './ContentCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentCard = ({\n  content\n}) => {\n  var _s = $RefreshSig$();\n  const {\n    type,\n    title,\n    description,\n    mediaUrl\n  } = content;\n  const CardOpen = ({\n    link,\n    children\n  }) => {\n    _s();\n    const [isOpen, setIsOpen] = useState(false);\n    const handlerClick = () => {\n      setIsOpen(!isOpen);\n      if (!isOpen) {\n        window.location.href = link; //Перенаправление на новую страницу\n      }\n    };\n  };\n  _s(CardOpen, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: handlerClick,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [description, \", \", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), type === \"video\" && /*#__PURE__*/_jsxDEV(\"video\", {\n      controls: true,\n      src: mediaUrl,\n      className: \"content-video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), type === \"image\" && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: mediaUrl,\n      alt: title,\n      className: \"content-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), type === \"text\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 31\n    }, this), type === \"article\" && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: mediaUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = ContentCard;\nexport default ContentCard;\nvar _c;\n$RefreshReg$(_c, \"ContentCard\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ContentCard","content","_s","$RefreshSig$","type","title","description","mediaUrl","CardOpen","link","children","isOpen","setIsOpen","handlerClick","window","location","href","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","alt","target","rel","_c","$RefreshReg$"],"sources":["Z:/Code/Nameless/frontend/src/ContentCard/ContentCard.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './ContentCard.css';\r\n\r\n\r\nconst ContentCard = ({content}) => {\r\n    const {type, title, description, mediaUrl } = content;\r\n\r\n    const CardOpen = ({link, children}) => {\r\n      const [isOpen, setIsOpen] = useState(false);\r\n\r\n      const handlerClick = () => {\r\n        setIsOpen(!isOpen);\r\n        if (!isOpen) {\r\n          window.location.href = link; //Перенаправление на новую страницу\r\n        }\r\n      };\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"card\" onClick={handlerClick}>\r\n          <h3>{title}</h3>\r\n          <p>{description}, {children}</p>\r\n    \r\n          {type === \"video\" && (\r\n            <video controls src={mediaUrl} className=\"content-video\" />\r\n          )}\r\n    \r\n          {type === \"image\" && (\r\n            <img src={mediaUrl} alt={title} className=\"content-image\" />\r\n          )} \r\n    \r\n          {type === \"text\" && <p>{description}</p>}\r\n    \r\n          {type === \"article\" && (\r\n            <a href={mediaUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            </a>\r\n          )}\r\n        </div>\r\n      );\r\n};\r\n\r\nexport default ContentCard;\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3B,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAO,CAAC,KAAK;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC/B,MAAM;IAACC,IAAI;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAGN,OAAO;EAErD,MAAMO,QAAQ,GAAGA,CAAC;IAACC,IAAI;IAAEC;EAAQ,CAAC,KAAK;IAAAR,EAAA;IACrC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;IAE3C,MAAMgB,YAAY,GAAGA,CAAA,KAAM;MACzBD,SAAS,CAAC,CAACD,MAAM,CAAC;MAClB,IAAI,CAACA,MAAM,EAAE;QACXG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGP,IAAI,CAAC,CAAC;MAC/B;IACF,CAAC;EACH,CAAC;EAACP,EAAA,CATIM,QAAQ;EAYd,oBACIT,OAAA;IAAKkB,SAAS,EAAC,MAAM;IAACC,OAAO,EAAEL,YAAa;IAAAH,QAAA,gBAC1CX,OAAA;MAAAW,QAAA,EAAKL;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBvB,OAAA;MAAAW,QAAA,GAAIJ,WAAW,EAAC,IAAE,EAACI,QAAQ;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE/BlB,IAAI,KAAK,OAAO,iBACfL,OAAA;MAAOwB,QAAQ;MAACC,GAAG,EAAEjB,QAAS;MAACU,SAAS,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC3D,EAEAlB,IAAI,KAAK,OAAO,iBACfL,OAAA;MAAKyB,GAAG,EAAEjB,QAAS;MAACkB,GAAG,EAAEpB,KAAM;MAACY,SAAS,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC5D,EAEAlB,IAAI,KAAK,MAAM,iBAAIL,OAAA;MAAAW,QAAA,EAAIJ;IAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEvClB,IAAI,KAAK,SAAS,iBACjBL,OAAA;MAAGiB,IAAI,EAAET,QAAS;MAACmB,MAAM,EAAC,QAAQ;MAACC,GAAG,EAAC;IAAqB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEd,CAAC;AAACM,EAAA,GApCI5B,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}